{"version":3,"sources":["assets/cat.jpg","firebase.js","App.js","index.js"],"names":["module","exports","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","App","useState","example","handleExample","image","setImage","url","setURL","predictions","handlePredictions","db","storage","ref","Math","random","className","style","padding","id","src","photo","alt","onClick","e","a","async","mobilenet","loadModel","loadImage","pic","classify","pred","console","log","myExamplePrediction","map","k","key","round","probability","type","onChange","target","files","handleImage","put","getDownloadURL","then","height","width","crossOrigin","img","document","getElementById","setAttribute","p","myRealPrediction","ReactDOM","render"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,iC,4SCatCC,IAASC,KAAKC,QAClBF,IAASG,cAZK,CACdC,OAAQ,0CACRC,WAAY,6CACZC,YAAa,oDACbC,UAAW,6BACXC,cAAe,yCACfC,kBAAmB,gBACnBC,MAAO,6CACPC,cAAe,iB,YC6EDC,EA9EH,WAAO,IAAD,EACgBC,mBAAS,IADzB,mBACVC,EADU,KACDC,EADC,OAESF,mBAAS,IAFlB,mBAEVG,EAFU,KAEHC,EAFG,OAGKJ,mBAAS,IAHd,mBAGVK,EAHU,KAGLC,EAHK,OAIwBN,mBAAS,IAJjC,mBAIVO,EAJU,KAIGC,EAJH,KAsBXC,EAAKC,oBAAUC,IAAI,aAAeC,KAAKC,UAmB7C,OACC,yBAAKC,UAAU,OACd,yCApCM,yBAAKC,MAAO,CAAEC,QAAS,QAAUC,GAAG,MAAMC,IAAKC,IAAOC,IAAI,UAsChE,4BAAQC,QAAS,SAACC,GAAD,OApCS,8BAAAC,EAAAC,OAAA,kEAAAD,EAAA,MACHE,OADG,cACrBC,EADqB,kBAAAH,EAAA,MAETI,oBAAUR,MAFD,cAErBS,EAFqB,kBAAAL,EAAA,MAGRG,EAAUG,SAASD,IAHX,OAGrBE,EAHqB,OAK3BC,QAAQC,IAAIF,GACZ5B,EAAc4B,GANa,sCAoCFG,KAAxB,WACChC,EAAQiC,KAAI,SAACZ,EAAGa,GAAJ,OACZ,wBAAIC,IAAKD,GACR,4BAAKb,EAAER,UAAY,KAAOF,KAAKyB,MAAsB,IAAhBf,EAAEgB,aAAqB,SAG9D,6BACA,6DAEA,2BAAOC,KAAK,OAAOC,SAAU,SAAClB,GAAD,OApCX,SAACA,GACpBlB,EAASkB,EAAEmB,OAAOC,MAAM,IACxBX,QAAQC,IAAI7B,GAkCyBwC,CAAYrB,MAEhD,6BAEA,4BACCD,QAAS,SAACC,GACGA,EAAEmB,OAAOC,MApCL,EAAAnB,EAAAC,OAAA,kEAAAD,EAAA,MACbd,EAAGmC,IAAIzC,IADM,OAEnBM,EAAGoC,iBAAiBC,MAAK,SAACxB,GAAD,OAAOhB,EAAOgB,MAFpB,uCAkClB,UAOA,yBAAKL,GAAG,QAAQC,IAAKb,EAAKe,IAAI,GAAG2B,OAAO,MAAMC,MAAM,MAAMC,YAAY,cACtE,6BACA,4BAAQ5B,QAAS,kBAtCM,4BAAAE,EAAAC,OAAA,kEAAAD,EAAA,MACAE,OADA,cAClBC,EADkB,QAElBwB,EAAMC,SAASC,eAAe,UAChCC,aAAa,cAAe,IAChCtB,QAAQC,IAAIkB,GAJY,WAAA3B,EAAA,MAKlBG,EAAUG,SAASqB,GAAKJ,MAAK,SAASQ,GAE3CvB,QAAQC,IAAI,gBAAiBsB,GAC7B9C,EAAkB8C,OARK,qCAsCAC,KAAvB,YACA,6BACChD,EAAY2B,KAAI,SAACZ,EAAGa,GAAJ,OAChB,wBAAIC,IAAKD,GACR,4BAAKb,EAAER,UAAY,KAAOF,KAAKyB,MAAsB,IAAhBf,EAAEgB,aAAqB,WC3EjEkB,IAASC,OAAO,kBAAC,EAAD,MAASN,SAASC,eAAe,W","file":"static/js/main.04d8be8d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cat.ca134ef9.jpg\";","import firebase from 'firebase/app';\n\nconst config = {\n\tapiKey: 'AIzaSyBIUa0UFimfB4uxT4kOGW_2ezcW6fGfw-8',\n\tauthDomain: 'ml-image-recognition-67ee0.firebaseapp.com',\n\tdatabaseURL: 'https://ml-image-recognition-67ee0.firebaseio.com',\n\tprojectId: 'ml-image-recognition-67ee0',\n\tstorageBucket: 'ml-image-recognition-67ee0.appspot.com',\n\tmessagingSenderId: '1030876500796',\n\tappId: '1:1030876500796:web:158f05589ab52a047e8439',\n\tmeasurementId: 'G-L49GGZKYLL'\n};\n\nif (!firebase.apps.length) {\n\tfirebase.initializeApp(config);\n}\n","import React, { useState } from 'react';\nimport './App.css';\nimport photo from './assets/cat.jpg';\nimport { loadImage } from 'canvas';\nimport * as mobilenet from '@tensorflow-models/mobilenet';\n\nimport './firebase';\nimport { storage } from 'firebase';\n\nconst App = () => {\n\tconst [example, handleExample] = useState([]);\n\tconst [image, setImage] = useState([]);\n\tconst [url, setURL] = useState('');\n\tconst [predictions, handlePredictions] = useState([]);\n\n\tconst myPhoto = () => {\n\t\treturn <img style={{ padding: '10px' }} id=\"img\" src={photo} alt=\"foto \"></img>;\n\t};\n\tconst myExamplePrediction = async () => {\n\t\tconst loadModel = await mobilenet.load();\n\t\tconst pic = await loadImage(photo);\n\t\tconst pred = await loadModel.classify(pic);\n\n\t\tconsole.log(pred);\n\t\thandleExample(pred);\n\t};\n\n\tconst handleImage = (e) => {\n\t\tsetImage(e.target.files[0]);\n\t\tconsole.log(image);\n\t};\n\tconst db = storage().ref('/UserPics/' + Math.random());\n\n\tconst uploadImage = async () => {\n\t\tawait db.put(image);\n\t\tdb.getDownloadURL().then((e) => setURL(e));\n\t};\n\n\tconst myRealPrediction = async () => {\n\t\tconst loadModel = await mobilenet.load();\n\t\tconst img = document.getElementById('image');\n\t\timg.setAttribute('crossOrigin', '');\n\t\tconsole.log(img);\n\t\tawait loadModel.classify(img).then(function(p) {\n\t\t\t// Classify the image\n\t\t\tconsole.log('Predictions: ', p);\n\t\t\thandlePredictions(p);\n\t\t});\n\t};\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<h1>Example: </h1>\n\t\t\t{myPhoto()}\n\t\t\t<button onClick={(e) => myExamplePrediction(e)}>Predict</button>\n\t\t\t{example.map((e, k) => (\n\t\t\t\t<li key={k}>\n\t\t\t\t\t<h1>{e.className + ': ' + Math.round(e.probability * 100) + '%'}</h1>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t\t<br />\n\t\t\t<h1>Upload an image to classify: </h1>\n\n\t\t\t<input type=\"file\" onChange={(e) => handleImage(e)} />\n\n\t\t\t<br />\n\n\t\t\t<button\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\tuploadImage(e.target.files);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\tUpload\n\t\t\t</button>\n\t\t\t<img id=\"image\" src={url} alt=\"\" height=\"300\" width=\"400\" crossOrigin=\"anonymous\" />\n\t\t\t<br />\n\t\t\t<button onClick={() => myRealPrediction()}> Predict</button>\n\t\t\t<hr />\n\t\t\t{predictions.map((e, k) => (\n\t\t\t\t<li key={k}>\n\t\t\t\t\t<h1>{e.className + ': ' + Math.round(e.probability * 100) + '%'}</h1>\n\t\t\t\t</li>\n\t\t\t))}\n\t\t</div>\n\t);\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}